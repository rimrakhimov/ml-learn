local
	val a = 16807.0 and m = 2147483647.0
in
	fun nextrand seed =
		let val t = a*seed
		in t - m * real(floor(t/m)) end
end;

fun randlist (n, seed, tail) =
	if n=0 then (seed, tail)
	else randlist (n-1, nextrand seed, seed::tail);

local
	fun ins (x, []) : real list = [x]
		| ins (x, y::ys) =
				if x <= y then x::y::ys
				else y :: ins (x, ys);
in
	fun insort [] = []
		| insort (x::xs) = ins (x, insort xs)
end;

fun quick [] = []
(*	| quick [x] = [x] *)
	| quick (a::bs) =
			let
				fun partition (left, right, []) : real list =
							quick left @ (a :: quick right)
					| partition (left, right, x::xs) =
							if x <= a then partition (x::left, right, xs)
												else partition (left, x::right, xs)
			in
				partition ([], [], bs)
			end;

fun quicker ([], sorted) = sorted
	| quicker (a::bs, sorted) =
			let
				fun partition (left, right, []) : real list =
							quicker (left, a :: quicker (right, sorted))
					| partition (left, right, x::xs) =
							if x <= a then partition (x::left, right, xs)
												else partition (left, x::right, xs)
			in
				partition ([], [], bs)
			end;
